# vi:filetype=tcl
#
# configuration for libzmq-singular

use cc cc-shared

options {
  singular:./Singular => "path to singular directory"
  zmq: => "path to ZeroMQ installation (optional)"
  location:local => {
      If and where to install the ZeroMQ bindings.

      local  - do not install them.
      system - install them in the Singular directory.
      <dir>  - install them in directory <dir>.
  }
}

set SINGULAR [opt-val singular ./singular]

if {![file isdirectory $SINGULAR]} {
  user-error "Singular path is not a directory"
}

set ZMQ [opt-val zmq]

set LOCATION_LIB {}
set LOCATION_MOD {}

switch -glob -- [opt-val location local] {
  local {}
  system {
    set LOCATION_LIB $SINGULAR/Singular/LIB
    set LOCATION_MOD $SINGULAR/Singular/MOD
  }
  /* {
    set LOCATION_LIB [opt-val location]
    set LOCATION_MOD [opt-val location]
  }
  ./* {
    set LOCATION_LIB [opt-val location]
    set LOCATION_MOD [opt-val location]
  }
  default {
    user-error "Invalid value for --location"
  }
}

if {[string equal $LOCATION_LIB ""]} {
  define INSTALLATION ""
} else {
  define INSTALLATION "\ttools/install.sh -m 644 zmq.lib $LOCATION_LIB
\ttools/install.sh -m 644 zmq_core.so $LOCATION_MOD
"
}
set sing_includes [list -I$SINGULAR -I$SINGULAR/factory/include -I$SINGULAR/libpolys]
set sing_libs {}

if {[string compare [opt-val zmq] ""]} {
  lappend sing_includes -I$ZMQ/include
  switch -glob -- [get-define host] {
    *-*-darwin* {
      lappend sing_libs -L$ZMQ/lib -Wl,-rpath -Wl,$ZMQ/lib
    }
    default {
      lappend sing_libs -L$ZMQ/lib -Wl,-rpath=$ZMQ/lib
    }
  }
}

define SING_INCLUDES $sing_includes
define SING_LIBS $sing_libs

make-template Makefile.in
