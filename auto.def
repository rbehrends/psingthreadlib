# vi:filetype=tcl
#
# configuration for libzmq-singular

use cc cc-shared

options {
  singular:./Singular => "path to singular directory"
  zmq: => "path to ZeroMQ installation (optional)"
  location:local => {
      If and where to install the ZeroMQ bindings.

      local  - do not install them.
      system - install them in the Singular directory.
      <dir>  - install them in directory <dir>.
  }
}

proc shell-quote {arg} {
  switch -regexp -- $arg {
    {^$} {return "''"}
    {^[-a-zA-Z0-9_@%+=:,./]+$} {
      return $arg
    }
    default {
      return "'[string map {' '\"'\"'} $arg]'"
    }
  }
}

set SINGULAR [opt-val singular ./Singular]

if {![file isdirectory $SINGULAR]} {
  user-error "Singular path is not a directory"
}

set ZMQ [opt-val zmq]

set LOCATION_LIB {}
set LOCATION_MOD {}

switch -glob -- [opt-val location local] {
  local {}
  system {
    set LOCATION_LIB $SINGULAR/Singular/LIB
    set LOCATION_MOD $SINGULAR/Singular/MOD
  }
  /* {
    set LOCATION_LIB [opt-val location]
    set LOCATION_MOD [opt-val location]
  }
  ./* {
    set LOCATION_LIB [opt-val location]
    set LOCATION_MOD [opt-val location]
  }
  default {
    user-error "Invalid value for --location"
  }
}

if {[string equal $LOCATION_LIB ""]} {
  define INSTALLATION ""
} else {
  set LOCATION_LIB [shell-quote $LOCATION_LIB]
  set LOCATION_MOD [shell-quote $LOCATION_MOD]
  define INSTALLATION "\ttools/install.sh -c -m 644 zmq.lib $LOCATION_LIB
\ttools/install.sh -c -m 644 zmq_core.so $LOCATION_MOD
"
}
set sing_includes ""
foreach inc [list $SINGULAR $SINGULAR/factory/include $SINGULAR/libpolys] {
  append sing_includes " [shell-quote -I$inc]"
}

set sing_libs ""
if {[string compare [opt-val zmq] ""]} {
  append sing_includes "$ -I[shell-quote $ZMQ/include]"
  set zmqlib [shell-quote $ZMQ/lib]
  switch -glob -- [get-define host] {
    *-*-darwin* {
      set sing_libs "-L$zmqlib -Wl,-rpath -Wl,$zmqlib"
    }
    default {
      set sing_libs "-L$zmqlib -Wl,-rpath=$zmqlib"
    }
  }
}

define SING_INCLUDES [string trim $sing_includes]
define SING_LIBS [string trim $sing_libs]

make-template Makefile.in
